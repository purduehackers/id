[workspace]
members = [".", "entity", "migration"]

[package]
name = "id"
version = "0.1.0"
edition = "2021"

[dependencies]
entity = { path = "entity" }
migration = { path = "migration" }                       # depends on your needs
tokio = { version = "1", features = ["macros"] }
serde_json = { version = "1", features = ["raw_value"] }
# Documentation: https://docs.rs/vercel_runtime/latest/vercel_runtime
vercel_runtime = { version = "1.1.4" }
oxide-auth = "0.5.4"
serde = { version = "1.0.204", features = ["derive"] }
url = "2.5.2"
form_urlencoded = "1.2.1"
urlencoding = "2.1.3"
lambda_http = "0.13.0"
thiserror = "1.0.63"
redis = { version = "0.27.2", features = ["aio", "tokio-comp", "rustls"] }
sea-orm = { version = "0.12", features = [
    "sqlx-postgres",
    "runtime-tokio-rustls",
    "with-chrono",
    "with-json",
    "macros",
] }
fred = { version = "8.0.6", features = ["enable-rustls"] }
rand = "0.8.5"
oxide-auth-async = "0.1.1"
chrono = "0.4.38"
async-trait = "0.1.81"
base64 = "0.21.7"
totp-rs = { version = "5.6.0", features = ["otpauth"] }

# You can specify a library for shared logic here (optional)
[lib]
path = "src/lib.rs"

# Each handler has to be specified as [[bin]]
[[bin]]
name = "authorize"
path = "api/authorize.rs"
[[bin]]
name = "token"
path = "api/token.rs"
[[bin]]
name = "scan"
path = "api/scan.rs"
[[bin]]
name = "new"
path = "api/new.rs"
[[bin]]
name = "door"
path = "api/door.rs"
[[bin]]
name = "passport"
path = "api/passport.rs"
[[bin]]
name = "passport-id"
path = "api/passport/[id].rs"
[[bin]]
name = "user"
path = "api/user.rs"
[[bin]]
name = "client"
path = "api/client.rs"

# Note that you need to provide unique names for each binary:
# [[bin]]
# name = "user-id"
# path = "api/user/[id].rs"
#
# [[bin]]
# name = "group-id"
# path = "api/group/[id].rs"
