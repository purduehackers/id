//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.12

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "auth_token")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub grant_id: i32,
    pub token: String,
    pub until: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::auth_grant::Entity",
        from = "Column::GrantId",
        to = "super::auth_grant::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    AuthGrant,
}

impl Related<super::auth_grant::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::AuthGrant.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
